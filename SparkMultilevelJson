1. import used 

import requests
import json
import objectpath
import pandas
from pyspark import SparkContext
sc = SparkContext()
from pyspark.sql import SparkSession
from pyspark.sql.types import ArrayType, StructField, StructType, StringType, IntegerType,DateType

2. get the data from rest api 
#Assign URL
URL = "https://public-api.blablacar.com/api/v2/trips?key=bKaZnI6BZP3KcGMd5Hv658SxtFFCdCkg&fn=munich&cur=EUR"
r = requests.get(url =URL)
data = r.json()


3. get value from json using objectpath

json_tree = objectpath.Tree(data['trips'])

trip_id = tuple(json_tree.execute('$..permanent_id'))
departure_date = tuple(json_tree.execute('$..departure_date'))
departure_city= tuple(json_tree.execute('$.departure_place.city_name'))
departure_address= tuple(json_tree.execute('$.departure_place.address'))
arrival_city =tuple(json_tree.execute('$.arrival_place.city_name'))
arrival_address =tuple(json_tree.execute('$.arrival_place.address'))
price=tuple(json_tree.execute('$..value'))
currency=tuple(json_tree.execute('$.price.currency'))
duration =tuple(json_tree.execute('$.duration.value'))


4. make the value to a list 

trip=list(zip(trip_id,departure_date,departure_city,departure_address,arrival_city,arrival_address,price, currency, duration))

5. create spark dataframe from the list


spark = SparkSession.builder \
    .getOrCreate()
    
 schema = StructType([
    StructField('trip_id', StringType(), True),
    StructField('departure_date', StringType(), True),
    StructField('departure_city', StringType(), True),
    StructField('departure_address', StringType(), True),
    StructField('arrival_city', StringType(), True),
    StructField('arrival_address', StringType(), True),
    StructField('price', StringType(), True),
    StructField('currency', StringType(), True),
    StructField('duration', StringType(), True)
])


# Convert list to RDD
rdd = spark.sparkContext.parallelize(trip)

# Create data frame
df = spark.createDataFrame(rdd,schema)





